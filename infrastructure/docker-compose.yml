services:
  rabbitmq:
    build:
      context: .
      dockerfile: Dockerfiles.rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: Pass123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  redis:
    build:
      context: .
      dockerfile: Dockerfiles.redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    restart: unless-stopped

  postgres:
    build:
      context: .
      dockerfile: Dockerfiles.postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: Pass@123
      POSTGRES_DB: odynn_platform
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  mongodb:
    build:
      context: .
      dockerfile: Dockerfiles.mongodb
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: Pass123
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped

volumes:
  rabbitmq_data:
  redis_data:
  postgres_data:
  mongodb_data:

